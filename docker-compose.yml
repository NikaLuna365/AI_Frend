# /docker-compose.yml (Исправленная версия)

version: '3.8'

services:
  # --- База Данных PostgreSQL ---
  db:
    image: postgres:15-alpine
    container_name: aifriend-db
    environment:
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: StrongPass # Убедитесь, что совпадает с .env.dev
      POSTGRES_DB: ai_drug
    volumes:
      - db_data:/var/lib/postgresql/data
    # --- УДАЛЯЕМ ИЛИ КОММЕНТИРУЕМ СЕКЦИЮ ports ---
    # ports:
    #   - "5433:5432" # Эта строка вызывала конфликт
    # ---------------------------------------------
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # --- Redis (Брокер Celery / Кэш) ---
  redis:
    image: redis:7-alpine
    container_name: aifriend-redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data
    # --- УДАЛЯЕМ ИЛИ КОММЕНТИРУЕМ СЕКЦИЮ ports ---
    # ports:
    #   - "6380:6379" # Эта строка тоже может вызвать конфликт
    # ---------------------------------------------
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: unless-stopped

  # --- Веб-сервер FastAPI ---
  web:
    container_name: aifriend-web
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - .:/app
    ports:
      - "8000:8000" # Порт веб-сервера ОСТАВЛЯЕМ, он нужен для доступа извне
    env_file:
      - .env.${ENVIRONMENT}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    restart: unless-stopped

  # --- Celery Worker ---
  celery:
    container_name: aifriend-celery
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "app.workers.tasks:celery_app", "worker", "--loglevel=debug"] # Оставляем debug пока
    volumes:
      - .:/app
    env_file:
      - .env.${ENVIRONMENT}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # --- Celery Beat (Планировщик) ---
  celery-beat:
    container_name: aifriend-celery-beat
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "app.workers.tasks:celery_app", "beat", "--loglevel=debug"] # Оставляем debug пока
    volumes:
      - .:/app
    env_file:
      - .env.${ENVIRONMENT}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

# --- Named Volumes ---
volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
