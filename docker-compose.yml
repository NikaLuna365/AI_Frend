services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: StrongPass
      POSTGRES_DB: ai_drug
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_user -d ai_drug"]
      interval: 10s
      retries: 5
    restart: always

  redis:
    image: redis:7
    command: ["redis-server", "--save", "60", "1"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 3
    restart: always

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env.${ENVIRONMENT}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "app.workers.tasks:celery_app", "worker", "--loglevel=info"]
    volumes:
      - .:/app
    env_file:
      - .env.${ENVIRONMENT}
    depends_on:
      - db
      - redis
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "app.workers.tasks:celery_app", "beat", "--loglevel=info"]
    volumes:
      - .:/app
    env_file:
      - .env.${ENVIRONMENT}
    depends_on:
      - db
      - redis
    restart: always

volumes:
  db_data:
  redis_data:
