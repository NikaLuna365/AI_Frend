# app/main.py

from __future__ import annotations

import logging

# --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç status ---
from fastapi import FastAPI, status # <--- –î–æ–±–∞–≤–∏–ª–∏ status
# ----------------------------------------
# --- –û—Å—Ç–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã ---
from app.api.v1.auth import router as auth_router
from app.api.v1.chat import router as chat_router
from app.api.v1.calendar import router as cal_router
from app.api.v1.audio import router as audio_router
from app.api.v1.health import router as health_router
from app.config import settings
# from .exceptions import add_exception_handlers # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ

logging.basicConfig(level=logging.INFO, format="%(asctime)s %(levelname)s %(name)s: %(message)s")

description = """
AI-Friend API helps you manage your conversations and schedule. üöÄ

**Features:**
*   Chat with AI
*   Calendar Integration (soon!)
*   Achievements (soon!)
*   Reminders (soon!)

**Authentication:** Uses JWT tokens obtained via `/v1/auth/login/test` (Dev Only) or Google Sign-In (Later).
"""

tags_metadata = [
    {"name": "Authentication", "description": "Operations related to user authentication and authorization."},
    {"name": "chat", "description": "Endpoints for interacting with the AI chat."},
    {"name": "Health", "description": "API Health Checks"}, # –î–æ–±–∞–≤–∏–º —Ç–µ–≥ –¥–ª—è health
    # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Ç–µ–≥–∏ –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
]

app = FastAPI(
    title="AI-Friend API",
    description=description,
    version="0.2.0",
    docs_url="/docs",
    redoc_url="/redoc",
    openapi_tags=tags_metadata
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(auth_router)
app.include_router(chat_router)
app.include_router(cal_router)
app.include_router(audio_router)
# --- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ health_router ---
# –ï—Å–ª–∏ health_router —É–∂–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç /healthz, —Ç–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–∏–∂–µ –Ω–µ –Ω—É–∂–µ–Ω.
# –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–∏–∂–µ –µ–≥–æ —Ä–µ–∞–ª–∏–∑—É–µ—Ç.
# –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, health_router —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –º–æ–∂–µ—Ç –Ω–µ –∏–º–µ—Ç—å /healthz
# app.include_router(health_router) # –ï—Å–ª–∏ /healthz –≤ –Ω–µ–º, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å @app.get –Ω–∏–∂–µ

# add_exception_handlers(app) # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ

logging.getLogger(__name__).info("üå± FastAPI started in %s mode", settings.ENVIRONMENT)

# --- Health Check —ç–Ω–¥–ø–æ–∏–Ω—Ç ---
# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ status —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
@app.get("/healthz", tags=["Health"], status_code=status.HTTP_200_OK)
async def health_check():
    """Basic health check endpoint."""
    return {"status": "ok"}
