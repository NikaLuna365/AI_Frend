# app/main.py

from __future__ import annotations

import logging

from fastapi import FastAPI
# --- –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞ ---
from app.api.v1.auth import router as auth_router
# --------------------------------------
from app.api.v1.chat import router as chat_router
from app.api.v1.calendar import router as cal_router
from app.api.v1.audio import router as audio_router
from app.api.v1.health import router as health_router
from app.config import settings
# --- –ú–µ—Å—Ç–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π ---
# from .exceptions import add_exception_handlers
# --------------------------------------------------

logging.basicConfig(level=logging.INFO, format="%(asctime)s %(levelname)s %(name)s: %(message)s")

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ---
description = """
AI-Friend API helps you manage your conversations and schedule. üöÄ

**Features:**
*   Chat with AI
*   Calendar Integration (soon!)
*   Achievements (soon!)
*   Reminders (soon!)

**Authentication:** Uses JWT tokens obtained via `/v1/auth/login/test` (Dev Only) or Google Sign-In (Later).
"""

tags_metadata = [
    {
        "name": "Authentication",
        "description": "Operations related to user authentication and authorization.",
    },
    {
        "name": "chat",
        "description": "Endpoints for interacting with the AI chat.",
    },
    # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Ç–µ–≥–∏ –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
]
# ------------------------------------------------------


app = FastAPI(
    title="AI-Friend API",
    description=description, # –î–æ–±–∞–≤–∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    version="0.2.0", # –£–≤–µ–ª–∏—á–∏–ª–∏ –≤–µ—Ä—Å–∏—é –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è auth
    docs_url="/docs",
    redoc_url="/redoc", # –î–æ–±–∞–≤–∏–ª–∏ ReDoc
    openapi_tags=tags_metadata # –î–æ–±–∞–≤–∏–ª–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ç–µ–≥–æ–≤
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(auth_router) # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
app.include_router(chat_router)
app.include_router(cal_router)
app.include_router(audio_router)
app.include_router(health_router)

# --- –ú–µ—Å—Ç–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π ---
# add_exception_handlers(app)
# --------------------------------------------------


logging.getLogger(__name__).info("üå± FastAPI started in %s mode", settings.ENVIRONMENT)

# --- –î–æ–±–∞–≤–ª—è–µ–º Health Check —ç–Ω–¥–ø–æ–∏–Ω—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ health_router ---
# (–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ app/api/v1/health.py)
# –ï—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∑–¥–µ—Å—å:
@app.get("/healthz", tags=["Health"], status_code=status.HTTP_200_OK)
async def health_check():
    """Basic health check endpoint."""
    return {"status": "ok"}
# ----------------------------------------------------------------------
