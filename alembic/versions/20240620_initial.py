# /app/alembic/versions/20240620_initial.py

"""MVP Initial Schema: users, messages, achievements

Revision ID: 20240620_initial # Вы можете использовать любой уникальный ID, Alembic обычно генерирует свой.
Revises: 
Create Date: 2025-05-10 12:00:00.000000 # Укажите актуальную дату и время

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import func # Для server_default=func.now()


# revision identifiers, used by Alembic.
revision: str = '20240620_initial' # Используем имя файла (или сгенерированный Alembic ID)
down_revision: Union[str, None] = None # Это первая миграция
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Applies the MVP schema to the database."""
    # ### commands auto generated by Alembic - please adjust! ###
    # (Корректируем автогенерацию под наши точные нужды MVP)

    # --- Таблица Пользователей (users) ---
    op.create_table(
        'users',
        sa.Column('id', sa.String(length=64), nullable=False, comment="Internal User ID"),
        sa.Column('google_id', sa.String(length=255), nullable=True, comment="Google User ID (sub)"),
        sa.Column('email', sa.String(length=255), nullable=True, comment="User email"),
        sa.Column('name', sa.String(length=128), nullable=True, comment="User display name"),
        sa.Column('is_active', sa.Boolean(), server_default=sa.true(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=func.now(), onupdate=func.now(), nullable=False),
        sa.Column('google_calendar_access_token_encrypted', sa.LargeBinary(), nullable=True),
        sa.Column('google_calendar_refresh_token_encrypted', sa.LargeBinary(), nullable=True),
        sa.Column('google_calendar_token_expiry', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True) # Email должен быть уникальным
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False) # Индекс на PK уже есть, но для явности
    # ------------------------------------

    # --- Таблица Сообщений (messages) ---
    op.create_table(
        'messages',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.String(length=64), nullable=False, comment="FK to users.id"),
        sa.Column('role', sa.String(length=16), nullable=False, comment="'user' or 'assistant'"),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_messages_user_id_users'), ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_messages'))
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_index(op.f('ix_messages_user_id'), 'messages', ['user_id'], unique=False)
    # -----------------------------------

    # --- Таблица Ачивок Пользователя (achievements) ---
    # (Без таблицы achievement_rules для MVP)
    op.create_table(
        'achievements',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.String(length=64), nullable=False, comment="FK to users.id"),
        sa.Column('code', sa.String(length=64), nullable=False, comment="Identifier for the achievement trigger"),
        sa.Column('title', sa.String(length=128), nullable=True, comment="Generated title"),
        sa.Column('badge_png_url', sa.String(length=512), nullable=True, comment="URL to the PNG badge in GCS"),
        sa.Column('status', sa.String(length=32), server_default='PENDING_GENERATION', nullable=False, comment="Generation status"),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=func.now(), onupdate=func.now(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_achievements_user_id_users'), ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_achievements')),
        sa.UniqueConstraint('user_id', 'code', name=op.f('uq_achievements_user_id_code')) # Пользователь получает ачивку один раз
    )
    op.create_index(op.f('ix_achievements_code'), 'achievements', ['code'], unique=False)
    op.create_index(op.f('ix_achievements_id'), 'achievements', ['id'], unique=False)
    op.create_index(op.f('ix_achievements_status'), 'achievements', ['status'], unique=False)
    op.create_index(op.f('ix_achievements_user_id'), 'achievements', ['user_id'], unique=False)
    # -------------------------------------------------

    # ### end Alembic commands ###


def downgrade() -> None:
    """Reverts the MVP schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Удаляем в обратном порядке создания и с учетом индексов
    op.drop_index(op.f('ix_achievements_user_id'), table_name='achievements')
    op.drop_index(op.f('ix_achievements_status'), table_name='achievements')
    op.drop_index(op.f('ix_achievements_id'), table_name='achievements')
    op.drop_index(op.f('ix_achievements_code'), table_name='achievements')
    op.drop_table('achievements')

    op.drop_index(op.f('ix_messages_user_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')

    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
