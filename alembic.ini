# /app/alembic.ini (Финальная версия для Фазы 0)

[alembic]
# Путь к скриптам миграций относительно этого файла .ini
script_location = alembic/versions

# Шаблон имени файла миграции
file_template = %%(year)d%%(month).2d%%(day).2d_%%(rev).4s_%%(slug)s

# Добавляем корень проекта в PYTHONPATH при запуске alembic
prepend_sys_path = .

# URL Базы Данных.
# Используется КОМАНДОЙ alembic НАПРЯМУЮ при генерации и offline режиме.
# Для online режима env.py тоже читает это значение.
# Используем СИНХРОННЫЙ формат URL, т.к. сама утилита alembic синхронна.
# ВАЖНО: Укажите правильные user:password@host:port/dbname
#        для ПОДКЛЮЧЕНИЯ С ТОГО МЕСТА, ГДЕ ЗАПУСКАЕТСЯ alembic.
#        При генерации на хосте - используйте localhost:5432 (если порт проброшен).
#        При запуске из контейнера migrate - используйте db:5432.
#        => МЫ БУДЕМ МЕНЯТЬ ЭТО ЗНАЧЕНИЕ ВРЕМЕННО ПРИ ГЕНЕРАЦИИ НА ХОСТЕ!
#        По умолчанию оставим значение для запуска из контейнера:
sqlalchemy.url = postgresql://ai_user:StrongPass@db:5432/ai_drug

# Настройки логирования для Alembic
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
# Установим в WARN, чтобы не видеть SQL от самого Alembic при upgrade
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
# Установим в INFO, чтобы видеть шаги применения миграций
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%H:%%M:%%S
